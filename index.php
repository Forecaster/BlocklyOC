<?php
ini_set('display_errors', 1);
?>
<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="UTF-8">
		<title>Blockly OC</title>

		<script src="blockly/blockly_compressed.js"></script>
		<script src="blockly/blocks_compressed.js"></script>
		<script src="blockly/msg/js/en.js"></script>
		<script src="blockly/lua_compressed.js"></script>
		<script src="functions.js"></script>

		<script src="custom_blocks_utility.js"></script>
		<script src="custom_code_utility.js"></script>
		<script src="custom_blocks_robot_api.js"></script>
		<script src="custom_code_robot_api.js"></script>
		<script src="custom_blocks_computer_api.js"></script>
		<script src="custom_code_computer_api.js"></script>
		<script src="custom_blocks_crafting_upgrade.js"></script>
		<script src="custom_code_crafting_upgrade.js"></script>
		<script src="custom_blocks_inventory_controller.js"></script>
		<script src="custom_code_inventory_controller.js"></script>

		<script src="custom_blocks_beginner_mode.js"></script>
		<script src="custom_code_beginner_mode.js"></script>

		<style>
			html, body {
				height           : 100%;
				margin           : 0;
				background-color : #1f1f1f;
				color            : white;
			}

			a {
				color: lightblue;
			}

			a:visited {
				color: #4f7c8c;
			}

			textarea {
				background-color : transparent;
				color            : white;
			}

			table {
				height : 100%;
				width  : 100%;
			}

			#blocklyArea {
				height     : 99%;
				text-align : center;
			}

			.button_container {
				position   : absolute;
				top        : 6px;
				right      : 50%;
				text-align : center;
			}

			.btn {
				margin           : 4px;
				padding          : 4px;
				background-color : white;
				color            : black;
				border-radius    : 5px;
				cursor           : pointer;
			}

			.modal {
				display          : none;
				position         : fixed;
				width            : 780px;
				margin-left      : -400px;
				left             : 50%;
				top              : 20px;
				background-color : #1f1f1f;
				color            : white;
				border-radius    : 5px;
				border           : 1px solid white;
				z-index          : 100000;
				padding          : 10px;
			}

			.modal > .btn_close {
				position         : absolute;
				top              : -1px;
				right            : -1px;
				width            : 50px;
				height           : 20px;
				background-color : red;
				color            : white;
				text-align       : center;
				border           : 1px solid white;
				cursor           : pointer;
			}

			.modal > .btn_close:hover {
				background-color : white;
				color            : red;
			}

			.blocklySvg {
				background-color : transparent;
			}

			.blocklyToolboxDiv {
				background-color : #505050;
			}
		</style>
	</head>
	<body>
		<div id="modal_generated_code" class="modal">
			<div class="btn_close">X</div>
			<h2>Generated code</h2>
			<textarea id="generated_code_output" readonly="readonly" title=""
								style="width: 99%; height: 600px; resize: none;"></textarea>
		</div>
		<table>
			<tr>
				<td>
					<div id="button_container" class="button_container">
						<div id="btn_generate" class="btn">Generate Lua</div>
					</div>
					<h2>BlocklyOC</h2>
					<p>Made by <a href="https://towerofawesome.org/">Forecaster</a> mostly for fun.</p>
					<p>The code generated by this application assumes that it is run from within <b>OpenOS</b>. Mainly made for
						robot programming.</p>
					<p>For assistance join <code>#oc</code> on <a href="https://webchat.esper.net">irc.esper.net</a> or join the <a
							href="https://discord.gg/bYqKv7h">OC discord</a>. Report issues on <a href="https://github.com/Forecaster/BlocklyOC/issues/new">GitHub</a></p>
				</td>
			</tr>
			<tr>
				<td id="blocklyArea"></td>
			</tr>
		</table>
		<div id="blocklyDiv" style="position: absolute;"></div>
		<?php require_once "toolbox_beginner_mode.xml" ?>
		<?php require_once "toolbox_advanced_mode.xml" ?>
	</body>
	<script>
		const blocklyArea = document.getElementById('blocklyArea');
		const blocklyDiv = document.getElementById('blocklyDiv');
		const workspace = Blockly.inject(blocklyDiv, {
			toolbox: document.getElementById('toolbox_beginner_mode'),
			grid: {
				spacing: 20,
				length: 3,
				colour: '#7c7c7c',
				snap: true
			},
			trashcan: true
		});
		const onresize = function (e) {
			// Compute the absolute coordinates and dimensions of blocklyArea.
			let element = blocklyArea;
			let x = 0;
			let y = 0;
			do {
				x += element.offsetLeft;
				y += element.offsetTop;
				element = element.offsetParent;
			} while (element);
			// Position blocklyDiv over blocklyArea.
			blocklyDiv.style.left = x + 'px';
			blocklyDiv.style.top = y + 'px';
			blocklyDiv.style.width = blocklyArea.offsetWidth + 'px';
			blocklyDiv.style.height = blocklyArea.offsetHeight + 'px';
			Blockly.svgResize(workspace);
		};
		window.addEventListener('resize', onresize, false);
		onresize();
		Blockly.svgResize(workspace);

		const modal_closes = document.getElementsByClassName("btn_close");
		for (let btn in modal_closes) {
			modal_closes[btn].onclick = function (event) {
				event.target.parentElement.style.display = null;
			}
		}

		const modal_generated_code = document.getElementById("modal_generated_code");
		const generated_code_output = document.getElementById("generated_code_output");
		const btn_generate = document.getElementById("btn_generate");
		btn_generate.onclick = function () {
			generated_code_output.value = generatedCodePostProcessing(Blockly.Lua.workspaceToCode(workspace));
			modal_generated_code.style.display = "block";
		}
	</script>
</html>